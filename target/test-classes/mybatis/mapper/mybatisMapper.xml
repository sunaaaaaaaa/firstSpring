<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace ="com.kh.spring.mybatis.MybatisMapper">
  	<select id="selectPasswordByUserId" resultType="string"><!--프록시 메소드의 객체-->
  		select password from member where user_id = #{userId}
  	</select>
  	
  	<select id="selectMemberById" resultType="com.kh.spring.member.model.dto.Member">
  		select * from member where user_id = #{userId}
  	</select>
  	
  	<select id="selectRentAndMemberById" resultType="java.util.Map">
  		select * from member join rent_master using(user_id)
  		where user_id = #{userId}
  	</select>
  	
  	<resultMap type="map" id="rentData">
  		<!-- 
  			column : map에 담을 컬럼명
  			javaType : map에 담을때 어떤타입의 데이터로 저장할지 결정
  			property : map에 담을때 사용할 키값
  			 -->
  	<result column="user_id" javaType="string" property="userId"/>
  	<result column="title" javaType="string" property=""/>
	<result column="rm_idx" javaType="string" property="rmIdx"/>
 	<result column="rent_book_cnt" javaType="int" property="rentBookCnt"/>
	<result column="reg_date" javaType="date" property="regDate"/>
	<result column="rb_idx" javaType="string" property="rbIdx"/>
	<result column="bk_idx" javaType="string" property="bkIdx"/>
  	</resultMap>
  	
  	<select id="selectRnetDataByUserId" resultMap="rentData">
  		select user_id, title, rm_idx,rent_book_cnt, rm.reg_date,rb_idx,bk_idx,tell
  		from member
  		inner join rent_master rm using(user_id)
  		inner join rent_book using(rm_idx)
  		where user_id = #{userId}
  	</select>
  	
  	<insert id="insertWithDto">
  		insert into member(user_id,password,tell,email)
  		values(#{userId},#{password},#{tell},#{email})  	
  	</insert>
  	
  	<insert id="insertWithMap">
  		insert into rent_master(rm_idx,user_id,title,rent_book_cnt)
  		values(sc_rm_idx.nextval,#{member.userId},#{title},#{rentBookCnt})
  	</insert>
  	
  	<delete id="delete">
  		delete from rent_master where user_id = #{userId}  	
  	</delete>
  	
  	<update id="update">
  		update member set password=#{password} where user_id=#{userId}
  	</update>
  	
  	
  	<!-- 
  	마이바티스의 기본 statement 객체는 PreparedStatement를 사용한다.
  	다른 statement를 사용해야할경우 statementType속성을 사용해 변경이 가능함
  	변경가능한 종류로는 STATEMENT ,PREPARED, CALLABLE 
  	 -->
  	
  	<insert id="procedure" statementType="CALLABLE">
  		{call sp_rent_extend(#{rbIdx, mode=IN})}
  	</insert>
  	
  	<insert id="test01">
  		insert into book(bk_idx,title,author)
  		values(sc_bk_idx.nextval,#{title},#{author})
  	</insert>
  	
  	<update id="test02">
  		update rent_book set extension_cnt=0 where extension_cnt>=2
  	</update>
  	
  	<delete id="test03">
  		delete from member where reg_date <![CDATA[<]]> '2021/10/01'
  		and reg_date > '2021/09/01' <!-- BETWEEN쓰는게 더좋음 &lt; &lte; &gt; &gte;-->
  	</delete>
  	
  	<select id="test04" resultType="map">
  		select * 
  		from (select rownum rnum, b.* 
		  		from book b 
		  		order by rent_cnt desc)
  		where rnum &lt; 4
  	</select>
  	
  </mapper>